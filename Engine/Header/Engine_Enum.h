#ifndef Engine_Enum_h__
#define Engine_Enum_h__

namespace Engine
{
	// 추가 및 편집시 팀장 보고
	enum class SCENE_TYPE			{ INTRO, LOBBY, WORLD, DUNGEON_TEMPLE, DUNGEON_SWAMP, ENDING, LOADING, TOOL, TYPEEND }; // 씬 종류
	
	// 추가 및 편집시 팀장 보고		// 추가시 Scene의 Ready_Layer_Other() 함수에 해당 레이어 생성 추가 필수											       					
	enum class OBJ_TYPE				{ PLAYER, MONSTER, NPC, ITEM, PROJECTILE, CAMERA, LINE, 
									  ENVIRONMENT, TERRAIN, GENERATOR, RANGE_OBJ, SKILL, ISLAND, BACKGROUND, FLAG, TRIGGER, EFFECT, UI, TYPEEND }; // 오브젝트 타입

	enum class OBJ_ID			
	{


		/* ========================================= Terrain ========================================*/


		// Terrain
		TERRAIN_WORLD, TERRAIN_DUNGEON, TERRAIN_ICEWORLD, TERRAIN_TOOL,
	



		/* ========================================= Environment ========================================*/


		// Environment - Chest
		ENVIRONMENT_CHEST_COSMETIC, ENVIRONMENT_CHEST_GOLD, ENVIRONMENT_CHEST__REGULAR,
		
		// Environment - Building - House
		ENVIRONMENT_BUILDING_HOUSE_1, ENVIRONMENT_BUILDING_HOUSE_2, ENVIRONMENT_BUILDING_HOUSE_3, 
		ENVIRONMENT_BUILDING_HOUSE_4, ENVIRONMENT_BUILDING_HOUSE_5, ENVIRONMENT_BUILDING_HOUSE_6, 
		ENVIRONMENT_BUILDING_KINGHOUSE,
		
		// Environment - Building - Tower
		ENVIRONMENT_BUILDING_TOWER_1, ENVIRONMENT_BUILDING_TOWER_2, ENVIRONMENT_BUILDING_TOWER_3,
		
		// Environment - Natural - Bush
		ENVIRONMENT_NATURAL_BUSH_1, ENVIRONMENT_NATURAL_BUSH_2, ENVIRONMENT_NATURAL_BUSH_3, 
		ENVIRONMENT_NATURAL_BUSH_4, ENVIRONMENT_NATURAL_BUSH_5, ENVIRONMENT_NATURAL_BUSH_6, 
		ENVIRONMENT_NATURAL_BUSH_7, ENVIRONMENT_NATURAL_BUSH_8, ENVIRONMENT_NATURAL_BUSH_9, 
		ENVIRONMENT_NATURAL_BUSH_10, ENVIRONMENT_NATURAL_BUSH_11,

		// Environment - Natural - Mountain
		ENVIRONMENT_NATURAL_MOUNTAIN_GRASS, ENVIRONMENT_NATURAL_MOUNTAIN_ICE,

		// Environment - Natural - Pillar
		ENVIRONMENT_NATURAL_PILLAR_ICE, ENVIRONMENT_NATURAL_PILLAR_ROCK_1, ENVIRONMENT_NATURAL_PILLAR_ROCK_2, 
		ENVIRONMENT_NATURAL_PILLAR_ROCK_3, ENVIRONMENT_NATURAL_PILLAR_TEMPLE_1, ENVIRONMENT_NATURAL_PILLAR_TEMPLE_2,

		// Environment - Natural - Rock
		ENVIRONMENT_NATURAL_ROCK_1, ENVIRONMENT_NATURAL_ROCK_2, ENVIRONMENT_NATURAL_ROCK_3, ENVIRONMENT_NATURAL_ROCK_4,

		// Environment - Enterance
		ENVIRONMENT_ENTERANCE_SMITHY, ENVIRONMENT_ENTERANCE_MAGICSHOP, 
		ENVIRONMENT_ENTERANCE_DUNGEON_GRASS, ENVIRONMENT_ENTERANCE_DUNGEON_ICE, ENVIRONMENT_ENTERANCE_DUNGEON_TEMPLE,




		/* ========================================= Monster ========================================*/


		// Monster
		 MONSTER_HEDGEHOG, MONSTER_DRAGON, MONSTER_BAT, MONSTER_RAM, MONSTER_FOX, MONSTER_SQUIRREL, MONSTER_WYVERN, MONSTER_WYVERNRED, 
		
		
		 MONSTER_TEST,
		



		/* ========================================= Npc ========================================*/


		// Npc
		NPC_BLACKSMITH, NPC_CITIZEN_1, NPC_CITIZEN_2, NPC_KING, NPC_MAGE, NPC_SOLLIDER, NPC_DRAKOS, NPC_SPIRIT,




		/* ========================================= Item ========================================*/

		ITEM_GOLD, ITEM_EXP, ITEM_KEY, ITEM_WARRIOR, ITEM_NINJA, ITEM_MAGE,

		// Item




		/* ========================================= Line ========================================*/


		// Line
		LINE,




		/* ========================================= Light ========================================*/


		// Light




		/* ========================================= BackGround ========================================*/


		// BackGround
		BACKGROUND,




		/* ========================================= UI ========================================*/


		// UI - WORLD
		UI_ENTER, UI_DEF, UI_HP, UI_MANA, UI_RING,
		// UI - VIEWPORT
		UI_EXP, UI_LEVEL, UI_TAB, UI_ZOOM, UI_INDICATOR, UI_FILEDSKILL,
		UI_INVENTORY, UI_DIALOG, UI_FLIGHT,




		/* ========================================= CAMERA ========================================*/


		// CAMERA
		CAMERA_PLAYER, CAMERA_TOOL, CAMERA_TARGET_OBJ,




		/* ========================================= PLAYER ========================================*/


		PLAYER,

		/* ========================================= Effect ========================================*/



		// ENVIRONMENT
		EFFECT_MOVEDUST, EFFECT_MOVEWATER, EFFECT_PLAYABLE_SHADOW, EFFECT_MONSTER_SHADOW, EFFECT_NPC_SHADOW, EFFECT_ITEM_SHADOW,
			EFFECT_POLLEN, EFFECT_CLOUD_1, EFFECT_CLOUD_2, EFFECT_CLOUD_3, EFFECT_FONT,

		// ITEM
		EFFECT_ITEMSPARKLE, EFFECT_ITEMGETEFFECT,
		// BATTLE
		EFFECT_MONSTERSPIRIT, EFFECT_PLAYERSLASH, EFFECT_MOBCUTEFFECT, EFFECT_CIRCLE_STEMP,
		EFFECT_PLAYERHITEFFECT,

		// SKILL
		EFFECT_SKILL_FIRE, EFFECT_SKILL_THUNDER, EFFECT_SKILL_HEAL, EFFECT_SKILL_FREEZING, EFFECT_BEAM, EFFECT_SKILL_CATTRAP,

		// RANGE
		EFFECT_RANGE,


		// Cast (NONE)
		EFFECT_SKILL_CAST_YELLOW, EFFECT_SKILL_CAST_PURPLE, EFFECT_SKILL_CAST_BLUE,
		EFFECT_SKILL_SPELLBURST_YELLOW, EFFECT_SKILL_SPELLBURST_PURPLE, EFFECT_SKILL_SPELLBURST_BLUE,

		EFFECT_SKILL_SPELLBURST_FIRE,
		EFFECT_SKILL_LIGHTNING,

		EFFECT_SKILL_RANGE_BIGCIRCLE, EFFECT_SKILL_RANGE_SMALLCIRCLE, EFFECT_SKILL_RANGE_ARROW,
		EFFECT_SKILL_RITUAL_CIRCLE, EFFECT_SKILL_RANGE_SQUARE, 
					
		/* ========================================= Skill ========================================*/

		//Player_Skill
		SKILL_PLAYER_FIRE, SKILL_PLAYER_THUNDER, SKILL_PLAYER_ICE, SKILL_PLAYER_BEAM, SKILL_PLAYER_HEAL,

		//Monster_SKill
		SKILL_MONSTER_FIRE, SKILL_MONSTER_THUNDER, SKILL_MONSTER_ICE, SKILL_MONSTER_BEAM, SKILL_MONSTER_BASIC,


		/* ========================================= Generator ========================================*/

		// Generator
		GENERATOR_POLLEN,




		/* ========================================= AtkRange ========================================*/

		// AtkRange
	RANGE_OBJ,



	// 새로 추가한 오브젝트 ID -> IMGUI 갱신 필요

	MONSTER_SERPENT, MONSTER_FISH, MONSTER_MERLION, MONSTER_CATHULU, MONSTER_VIOLETDRAGON,


	//======== Projectile
	PROJECTILE_BASIC_BULLET, PROJECTILE_CHASE_BULLET, PROJECTILE_CURVE_BULLET, PROJECTILE_STAR_BULLET,
	PROJECTILE_MAGE_BULLET,
	PROJECTILE_BOSS_CONVERGING,

	//==Skill
	SKILL_PLAYER_FLY, EFFECT_FLYLINGHTING,

	UI_BACKGROUND,

	// 새로운 환경 오브젝트
	ENVIRONMENT_NATURAL_TWINPEAKS,
	ENVIRONMENT_NATURAL_DEATH_TREE, ENVIRONMENT_NATURAL_TRIPLE_DEATH_TREE, ENVIRONMENT_NATURAL_WORLD_TREE,
	ENVIRONMENT_OTHER_SWEETS1, ENVIRONMENT_OTHER_SWEETS2,
	ENVIRONMENT_NATURE_TOMBSTONE, ENVIRONMENT_NATURE_GRASS,
	ENVIRONMENT_BUILDING_PIRATE_HIDEOUT,

	EFFECT_THORNSPARKLE, EFFECT_THORN_ATTACK,

	SKILL_BOSS_BLOODYTHUNDER, SKILL_BOSS_FULLDOWN, EFFECT_BOSS_THUNDER,
	SKILL_BOSS_CREATE_WYVERN,

	// 새로 추가한 UI
	UI_QUEST,
	UI_BACKGROUND_SHADE,

	//Effect
	EFFECT_LEVELUP_SHINE, EFFECT_LEVELUP_BANNER, EFFECT_LEVELUP_SHINE2,


	// Island (수정시 CMiniGameMgr_Jump.h의 enum도 같이 수정)
	ISLAND_RANGE_VILLAGE,
	ISLAND_RANGE_ICE,
	ISLAND_RANGE_DEATH,
	ISLAND_RANGE_JUMP,
	ISLAND_RANGE_KING,

	// 새로 추가한 UI_2
	UI_SKILL_GET_EFFECT_UI, UI_SKILL_GET_UI, UI_SHADE_UI, UI_WEAPON_GET_EFFECT_UI, UI_WEAPON_GET_UI,

	// 또 새로 추가한 환경 오브젝트
	ENVIRONMENT_SIGN_NOTICE, ENVIRONMENT_SIGN_ASTROPAW, ENVIRONMENT_SIGN_CATTRAP,
	ENVIRONMENT_SIGN_FALME, ENVIRONMENT_SIGN_FREEZE, ENVIRONMENT_SIGN_HEAL,
	ENVIRONMENT_SIGN_LIGHT, ENVIRONMENT_SIGN_PURRSERK, ENVIRONMENT_SIGN_STOP,
	ENVIRONMENT_SIGN_TWINTOWN, ENVIRONMENT_SIGN_FISH, ENVIRONMENT_SIGN_WOODFISH,

	ENVIRONMENT_SKULL_DRAGON1, ENVIRONMENT_SKULL_DRAGON2, ENVIRONMENT_SKULL_DRAGON3,

	ENVIRONMENT_WRECK_SHIP, ENVIRONMENT_WRECK_PIECE1, ENVIRONMENT_WRECK_PIECE2,
	ENVIRONMENT_WRECK_PIECE3, ENVIRONMENT_WRECK_PIECE4,

	ENVIRONMENT_BUILDING_WALL1, ENVIRONMENT_BUILDING_WALL2,

	ENVIRONMENT_OTHER_DRAKOTH_TABLE, ENVIRONMENT_OTHER_POTION, ENVIRONMENT_OTHER_PRESENT,
	ENVIRONMENT_OTHER_PAPER, ENVIRONMENT_OTHER_TOWN_SANCTUARY,

	// 퀘스트 아이템
	ITEM_WORLD_FLIGHT,



	// Projectile
	PROJECTILE_REDSTAR_BULLET,

	// Effect 
	EFFECT_BOSS_THUNDER_BLUE,

	//Skill
	SKILL_BOSS_BLUETHUNDER,

	// 3차 추가 환경 오브젝트
	ENVIRONMENT_NATURAL_LARGE_ICE_BUSH, ENVIRONMENT_NATURAL_VLARGE_ICE_BUSH,

	EFFECT_WORLDGETEFFECT, ITEM_POTION,

	// 나라 국기(미니게임)
	FLAG_CHINA, FLAG_USA, FLAG_FRANCE, FLAG_GERMANY, FLAG_ITALY,
	FLAG_JAPEN, FLAG_RUSSIA, FLAG_THAI, FLAG_OWNER,

	// Jun 3차 이후 추가 ID
	PLAYER_AFTERIMG, EFFECT_SNOW, EFFECT_RAIN, EFFECT_RAIN_RIPPLE,

	// 나라 국기(스타트)
	FLAG_START,


	//Bat 잔상
	BAT_AFTERIMG,

	//Projectile 추가
	PROJECTILE_GREEN_BULLET , PROJECTILE_WATER_BULLET,

	// 미니게임(빙고) 관련
	UI_BINGO_SUCCES, UI_BINGO_FAIL, UI_BINGO_CLEAR, BINGO_LAUNCHER,
	EFFECT_BINGO_SUCCES,


	// Boss Scene Trigger
	BOSS_SCENE_TRIGGER,

		 

	TERRAIN_TEMPLE,
	// 보스 그림자
	EFFECT_BOSS_SHADOW,

	// 템플 비석, 보상 상자 , 비석 먼지
	NPC_ZEOLITE, ENVIRONMENT_BINGO_CHEST, EFFECT_ZEOLITE_DUST,

	SKILL_PLAYER_ARROW, EFFECT_ZEOLITE_SHADOW, UI_QUEST_DIALOG,

	// Hit Effect
	EFFECT_HIT_PURPLE, EFFECT_HIT_RED, EFFECT_HIT_BLUE, EFFECT_HIT_GREEN,
	
	// Boom Effect
	EFFECT_BOOM_PURPLE, EFFECT_BOOM_RED, EFFECT_BOOM_BLUE, EFFECT_BOOM_GREEN,

	// Boss Skill Effect
	EFFECT_BOSS_HELLFIRE,
	// Boss Skill
	SKILL_BOSS_HELLFIRE,


	// 해상용 투사체
	PROJECTILE_FIREWORK_BULLET, PROJECTILE_FIREWORK_SUB_BULLET, MONSTER_TURRETSKULL, PROJECTILE_PILE_BULLET,

	// 빙고 트랩
	PROJECTILE_TRAP_FIST, EFFECT_TRAP_FISTDUST, PROJECTILE_TRAP_BIGFIST, PROJECTILE_TRAP_BIGFISTDUST,

	TYPEEND
};

	enum class COMPONENT_TYPE		
	{ 
		TRANSFORM, COL_RECT, COL_CIRCLE, COL_LINE, COL_SPHERE, ANIMATOR, STATEMACHINE, RIGIDBODY,
		BUFFER_RC_TEX, BUFFER_RC_COL, BUFFER_CUBE, BUFFER_TERRAIN_TEX, BUFFER_TERRAIN_RC_TEX,
		TEXTURE, CAMERA, AICOM, TYPEEND 

	}; // 컴포넌트 종류

	enum class GROUND_TYPE			{ NORMAL, ICE, TYPEEND };
	
	enum class BGM_TYPE				{ NONE, ISLAND_VILLAGE, ISLAND_ICE, ISLAND_JUMP, ISLAND_KING, ISLAND_DEATH, ISLAND_TEMPLE, ISLAND_DUNGEON, BOSS, ENDING, TYPEEND };

	enum class PRIORITY_SKILL_LAYER { FIRST, SECOND, THIRD, FOURTH, FIFTH, TYPEEND };
	
	enum class EVENT_TYPE			{ ADD_OBJ, DELETE_OBJ, RETURN_OBJ, CHANGE_SCENE, TYPEEND }; // 이벤트 타입 (이벤트 매니저)

	enum class COL_TYPE				{ RECT, CIRCLE, LINE, SPHERE, TYPEEND }; // 콜라이더 종류, 충돌 종류

	enum class TILE_TYPE			{ LAND, SEA, ICE, TYPEEND }; // 타일 종류

	enum class LOADING_THREAD_TYPE	{ COMPONENT_AND_TEXTURE, TOOL, WORLD, DUNGEON_TEMPLE, DUNGEON_SWAMP, TYPEEND };// 로딩 쓰레드 종류(로고 씬을 제외한 대부분의 씬이 보유)

	enum class PLAY_MODE			{ GAME, TOOL, TYPEEND }; // 플레이 모드 (개발자 모드 편의성 확보 목적)

	enum class GAME_STATUS			{ PLAYING, PAUSE, END }; // 현재 게임의 상태를 나타낸다.

	enum class STATE_TYPE			
	{ 
		FRONT_IDLE, FRONT_WALK, FRONT_ROLL, FRONT_ATTACK, FRONT_ATTACK1, FRONT_ATTACK2, FRONT_ATTACK3, FRONT_HIT, FRONT_DIE, FRONT_WAKE, FRONT_SLEEP, FRONT_FLIGHT,
		BACK_IDLE, BACK_WALK, BACK_ROLL, BACK_ATTACK, BACK_ATTACK1, BACK_ATTACK2, BACK_FLIGHT, DEAD, 
		PATROL, CHASE, COMEBACK, MONATTACK, MONREST,BACK_PATROL, BACK_CHASE, BACK_COMEBACK, BACK_MONATTACK, BACK_MONREST,
									
		// Boss Pattern
		BOSS_FULLDOWN_FLY,	  BOSS_FULLDOWN_MOVE,     BOSS_FULLDOWN_DOWN, 
		BOSS_CONVERGING_FIRE, BOSS_CONVERGING_CAST,    
		BOSS_BLOODY_THUNDER,  BOSS_BLOODY_CAST,
		BOSS_BLUE_THUNDER,	  BOSS_BLUE_CAST,
		BOSS_SHOOTING_STAR,   BOSS_SHOOTING_CAST,     BOSS_SHOOTING_RED,
		BOSS_SPREAD_BULLET,   BOSS_SPREAD_CAST,
		BOSS_CREATE_WYVERN,   BOSS_CREATE_CAST,       
		BOSS_WATCH_IN_SKY,    BOSS_WATCH_DOWN,		  BOSS_WATCH_UP,
		BOSS_DASH_ATTACK,	  BOSS_DASH_BACK_ATTACK,
		BOSS_FIRE_ATTACK,	  BOSS_FIRE_CAST,     
		BOSS_READY_PATTERN,   
		BOSS_ATTACK2, BOSS_BACK_ATTACK2, BOSS_CHASE2, BOSS_BACK_CHASE2, 
		BOSS_ATTACK3, BOSS_BACK_ATTACK3, BOSS_CHASE3, BOSS_BACK_CHASE3, 
		BOSS_INTRO_DOWN,BOSS_INTRO_WING,BOSS_INTRO_SWORD , BOSSDEAD,
		BOSS_NEAR_ATTACK1, BOSS_BACK_NEAR_ATTACK1, BOSS_NEAR_ATTACK2, BOSS_BACK_NEAR_ATTACK2,
		BOSS_HELLFIRE_CAST, BOSS_HELLFIRE, TYPEEND

	}; // 원하는 상태 있으면 추가



	enum class UI_TYPE				{ VIEW , WORLD , TYPEEND }; // UI 종류 (뷰포트 사용, 월드 사용)

	enum class UI_LAYER				{ LV0, LV1, LV2, LV3, TYPEEND };

	enum class LINE_TYPE			{ LAND, SEA, ICE, TYPEEND }; // 라인 종류
	
	enum class EFFECT_TYPE			{ SKILL, TYPEEND };

	enum class ENTER_TYPE			{ ENTER, ENTER_NO, TYPEEND};

	enum class INTERACTION_TYPE		{ INTERACTION_ALPHA, INTERACTION_ENTER,
		INTERACTION_INSPECT, INTERACTION_CHAT, INTERACTION_QUESTION, INTERACTION_CHECK, TYPEEND };

	enum class UIENTER_TYPE			{ ENTER, INSPECT, CATNAP, BUY, CHAT, QUESTION, CHECK, TYPEEND };

	enum class ITEM_TYPE			{ EQUIPMENT , WEAPON, OBJECT, USE, TYPEEND};

	enum class QUEST_PROGRESS		{ QUEST_READY, QUEST_ENTER, QUEST_UPDATE, QUEST_EXIT, QUEST_CLEAR, QUEST_NONE };

	enum class SPIRITEMO_TYPE		{ HAPPY, ANGRY, SAD, SLY, STUN, TYPEEND};

	enum class SKILL_TYPE			{ FIRE, THUNDER, ICE, BEAM, HEAL, PURSERKER, TYPEEND};
	enum class PAGE { INIT, INTRO, START, OUTTRO, DEAD, FADE_OUT, FADE_END, FINISH, TYPEEND };

	enum class CHANNEL_ID			
	{ 		
		// bgm
		BGM_PREV,
		BGM_CUR,

		// player
		PLAYER_0, 
		PLAYER_1, 
		PLAYER_2, 

		// monster
		MONSTER_HEDGEHOG,
		MONSTER_BAT,
		MONSTER_RAM,
		MONSTER_FOX,
		MONSTER_WYVERN,
		MONSTER_WYVERN_RED,
		MONSTER_FISH,
		MONSTER_SERPENT,

		MONSTER_BOSS_0,
		MONSTER_BOSS_1,
		MONSTER_BOSS_2,

		// environment
		ENVIRONMENT_0,
		ENVIRONMENT_1,
		ENVIRONMENT_2,
		ENVIRONMENT_3,

		// ui
		UI_0,
		UI_1,
		UI_2,
		UI_3,

		// effect
		EFFECT_0,
		EFFECT_1,
		EFFECT_2,
		EFFECT_3,
		EFFECT_4,
		EFFECT_5,
		EFFECT_6,
		EFFECT_7,

		TYPEEND = 32 
	
	};

	enum class TALK_ID {
		// KING
		TALK_KING_1,
		// MAGE
		TALK_MAGE_1,
		// BALCKSMITH
		TALK_BLACKSMITH_1,
		// SOLDIER

		// CITIZEN1

		// CITIZEN2

		TALK_END
	};


	enum class FONT_TYPE			{DAMAGE, HIT, GOLD, EXP, HEAL, TYPEEND};

	enum ARG_TAG { ARG_TERRAIN, ARG_OBJ, ARG_END }; // IMGUI 레이아웃 탭 분류

	enum TERRIAN_TAG {TERRAIN_WORLD, TERRAIN_TEMP, TERRAIN_DUNGEON_ICE, TERRAIN_END }; 	// IMGUI 터레인 저장을 위한 분류

	enum OBJ_TAG { OBJ_BUILDING, OBJ_CHEST, OBJ_ENVIRONMENT, 
		OBJ_MAGESHOP, OBJ_SMITHHOUSE, OBJ_TOWER, OBJ_OTHER }; // IMGUI 오브젝트 폴더 경로 불러오기 위한 타일 종류 분류

	enum FLAG_TAG {  
		FLAG_CHINA, FLAG_USA, FLAG_FRANCE, FLAG_GERMANY, 
		FLAG_ITALY, FLAG_JAPEN, FLAG_RUSSIA, FLAG_THAI, FLAG_START, FLAG_END }; // 국기

	enum class CAMERA_ACTION 
	{ 
		// Player
		NONE
		, PLAYER_IDL_TO_ATK		// 아이들 -> 근거리 공격
		, PLAYER_IDL_TO_FLY		// 아이들 -> 날기
		, PLAYER_IDL_TO_RANATK	// 아이들 -> 원거리 공격

		, PLAYER_ATK_TO_RANATK	// 근거리 공격 -> 원거리 궁격
		, PLAYER_RANATK_TO_ATK	// 원거리 공격 -> 근거리 공격

		, PLAYER_FLY_TO_IDL		// 날기 -> 아이들
		, PLAYER_ATK_TO_IDL		// 근거리공격 -> 아이들
		, PLAYER_RANATK_TO_IDL	// 원거리 공격 -> 아이들

		, PLAYER_TOP_TO_BACK // 탑뷰 -> 백뷰
		, PLAYER_BACK_TO_TOP // 백뷰 -> 탑뷰

		// Scene
		, SCENE_ENTER_INGAME		// 플레이어 y + 30 -> 플레이어 y (최초 월드 입장)
		, SCENE_ENTER_FIELD				// 씬 변경시마다 호출
		, SCENE_LOOK_WORLD		// 드래그시 전체 월드 보이게 
		, SCENE_EXIT_INGAME		// 게임종료시

		// GameObject
		, OBJ_CHANGE_TARGET		// NPC 등 퀘스트 안내

		// NPC 대화
		, START_NPC_TALK
		, END_NPC_TALK

		// Boss
		, START_BOSS
		, END_BOSS
		, BOSS_SKILL_IN
		, BOSS_SKILL_OUT

		, TYPEEND };
	

	enum class CAMERA_TYPE			{ PLAYER_CAMERA, TOOL_CAMERA, TYPEEND }; // 컴포넌트가 갖는다

	//enum class CAMERA_ACTION		{ NONE, ENTER_FILED, CHANGE_TARGET, LOOK_WROLD, TYPEEND };

	enum class EFFECT_RANGE_QUATER_TYPE 
	{
		CIRCLE_SKILL_RED, 
		CIRCLE_SKILL_YELLOW, 
		CIRCLE_ATTACK, 
		CIRCLE_SMALL_RED,
		CIRCLE_LARGE_PURPLE,

		SQUARE_PURPLE, 
		SQUARE_GOLD,
		SQUARE_RED, 
		SQUARE_ROTATED_PURPLE, /* New */
		SQUARE_ROTATED_RED, /* New */

		ARROW_BLUE, 
		ARROW_GOLD,
		ARROW_RED, 

		ARROW_VERTICAL_BLUE, /* New */
		ARROW_VERTICAL_RED, /* New */
		
		TYPEEND };

	enum class LERP_MODE			{ DEFAULT, EASE_OUT, EASE_IN, EXPONENTIAL, SMOOTHSTEP, SMOOTHERSTEP, TYPEEND };

	enum class FADE_MODE			{ ENTER_WORLD, BLACK_FADE_IN, BLACK_FADE_OUT, WHITE_FADE_OUT, WHITE_FADE_IN, TYPEEND };
	
	enum class CLASS_TYPE			{ NORMAL, NINJA, MAGE, THORN, TYPEEND };

	enum class DIALOG_TYPE			{ DIALOG_START, DIALOG_NORMAL, DIALOG_END };

	enum WINMODE					{ MODE_FULL	, MODE_WIN };
	
	enum COMPONENTID				{ ID_DYNAMIC, ID_STATIC, ID_END };		
	
	enum INFO						{ INFO_RIGHT, INFO_UP, INFO_LOOK, INFO_POS,	INFO_END }; 
	
	enum ROTATION					{ ROT_X, ROT_Y, ROT_Z, ROT_END };
	
	enum DIRID						{ DIR_RIGHT, DIR_UP, DIR_FORWARD, DIR_DOWN,  DIR_END };
	
	enum TEXTUREID					{ TEX_NORMAL, TEX_CUBE,	TEX_END };		// 해당 텍스처가 일반 노말 텍스처인지 큐브 텍스처인지
	
	enum MOUSEKEYSTATE				{ DIM_LB, DIM_RB, DIM_MB, DIM_END };	// 마우스 버튼 타입

	enum MOUSEMOVESTATE				{ DIMS_X, DIMS_Y, DIMS_Z, DIMS_END };	// 마우스 좌표 타입, z는 스크롤

	enum PROJECTID					{ ORTHOGRAPHIC, PERSPECTIVE, PROJECT_END};

	enum SPACEID					{ LOCAL, WORLD, SPACE_END };

	enum RENDERID					{ RENDER_PRIORITY, RENDER_NONALPHA, RENDER_ALPHA, RENDER_VIEWUI, RENDER_WDUI, RENDER_END };	// 현재는 장치를 통한 렌더 그룹이지만, 이후에는 셰이더에 대한 속성으로도 나뉘게 된다.

	enum INVENTORYID				{ INVEN_BKG, INVEN_ARMORTEX, INVEN_SKILLTEX,                   // Texture

									  INVEN_BUTTON1, INVEN_BUTTON2, INVEN_BUTTON3, INVEN_BUTTON4, // list  Button
									  INVEN_BUTTON5, INVEN_BUTTON6, INVEN_BUTTON7, INVEN_BUTTON8,
									  INVEN_BUTTON9, INVEN_BUTTON10, INVEN_BUTTON11, INVEN_BUTTON12,
									
									  INVEN_ATABBUTTON, INVEN_STABBUTTON, INVEN_SORTBUTTON, INVEN_CANCELBUTTON,	 // other Button	
									  INVEN_LINE, INVEN_TABLINE, INVEN_WEAPON_SELECT, INVEN_OK, INVEN_NO,												 // Line		
									  INVENTORYID_END };
}
#endif // Engine_Enum_h__
